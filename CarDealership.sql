DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE USER_INFO CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE CAR CASCADE CONSTRAINTS;
DROP TABLE CAR_OFFERED CASCADE CONSTRAINTS;
DROP TABLE CAR_PAYMENT CASCADE CONSTRAINTS;
DROP TABLE MONTHLY_PAYMENT CASCADE CONSTRAINTS;

CREATE TABLE CUSTOMER(
CUSTOMER_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
FIRST_NAME VARCHAR2(50),
LAST_NAME VARCHAR2(50),
PHONE_NUMBER VARCHAR2(15),
CREDIT_SCORE INTEGER,
USER_INFO_ID INTEGER,
CAR_OFFERED_ID INTEGER
);

CREATE TABLE USER_INFO(
USER_INFO_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
EMAIL VARCHAR2(50),
USER_NAME VARCHAR2(50),
PASS_WORD VARCHAR2(50),
USER_TYPE VARCHAR2(20)
);

CREATE TABLE EMPLOYEE(
EMPLOYEE_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
FIRST_NAME VARCHAR2(50),
LAST_NAME VARCHAR2(50),
DESIGNATION VARCHAR2 (50),
PHONE_NUMBER VARCHAR2(15),
USER_INFO_ID INTEGER
);

CREATE TABLE CAR(
CAR_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
CAR_MAKE VARCHAR2(50),
CAR_MODEL VARCHAR2(50),
CAR_YEAR INTEGER,
CAR_COLOR VARCHAR2(50),
CAR_STATUS VARCHAR2(15),
CAR_MILEAGE LONG,
CAR_PRICE NUMBER(8,2),
CAR_OFFERED_ID INTEGER
);

CREATE TABLE CAR_OFFERED(
CAR_OFFERED_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
OFFERED_PRICE NUMBER(8,2),
OFFER_STATUS VARCHAR2(20),
CAR_STATUS VARCHAR2(20)
);

CREATE TABLE CAR_PAYMENT(
CAR_PAYMENT_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
DOWNPAYMENT NUMBER(8,2),
LOAN_AMOUNT NUMBER(8,2),
CAR_OFFERED_ID INTEGER,
Car_SOLD_DATE DATE
);


CREATE TABLE MONTHLY_PAYMENT(
MONTHLY_PAYMENT_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
INTEREST_RATE NUMBER(4,2),
NUMBER_OF_MONTH INTEGER,
MONTHLY_FEE NUMBER(8,2),
CAR_PAYMENT_ID INTEGER,
MONTHY_PAYMENT_DATE DATE
);

--ADD CONSTRAINS
ALTER TABLE CUSTOMER
ADD CONSTRAINT FK_CUSTOMER_USER_INFO
FOREIGN KEY (USER_INFO_ID) REFERENCES USER_INFO(USER_INFO_ID);

ALTER TABLE CUSTOMER
ADD CONSTRAINT FK_CUSTOMER_CAR_OFFERED
FOREIGN KEY (CAR_OFFERED_ID) REFERENCES CAR_OFFERED(CAR_OFFERED_ID);


ALTER TABLE CAR
ADD CONSTRAINT FK_CAR_CAR_OFFERED
FOREIGN KEY (CAR_OFFERED_ID) REFERENCES CAR_OFFERED(CAR_OFFERED_ID);

ALTER TABLE CAR_PAYMENT
ADD CONSTRAINT FK_CAR_PAYMENT_CAR_OFFERED
FOREIGN KEY (CAR_OFFERED_ID) REFERENCES CAR_OFFERED(CAR_OFFERED_ID);

ALTER TABLE MONTHLY_PAYMENT
ADD CONSTRAINT FK_MONTHLY_PAYMENT_CAR_PAYMENT
FOREIGN KEY (CAR_PAYMENT_ID) REFERENCES CAR_PAYMENT(CAR_PAYMENT_ID);

ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_USER_INFO
FOREIGN KEY (USER_INFO_ID) REFERENCES USER_INFO(USER_INFO_ID);


CREATE OR REPLACE PROCEDURE CUSTOMERPRO
(firstName IN VARCHAR2, lastName IN VARCHAR2, phoneNumber IN VARCHAR2, 
creditScore INTEGER, uemail IN VARCHAR2, userName IN VARCHAR2, upassWord IN VARCHAR2, userType IN VARCHAR2)
AS
uId Number;
BEGIN 
INSERT INTO USER_INFO (EMAIL, USER_NAME, PASS_WORD, USER_TYPE) VALUES(uemail, userName, upassWord, userType);
SELECT USER_INFO_ID INTO uId FROM USER_INFO
WHERE EMAIL = uemail and USER_NAME = userName; 
INSERT INTO CUSTOMER (FIRST_NAME, LAST_NAME, PHONE_NUMBER, CREDIT_SCORE, USER_INFO_ID) VALUES(firstName, lastName, phoneNumber, creditScore, uId);
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE CARPRO
(carMake IN VARCHAR2, carModel IN VARCHAR2, carYear INTEGER, carColor IN VARCHAR2, carStatus IN VARCHAR2, carMileage LONG, carPrice NUMBER)
AS
BEGIN
INSERT INTO CAR(CAR_MAKE, CAR_MODEL, CAR_YEAR, CAR_COLOR, CAR_STATUS, CAR_MILEAGE, CAR_PRICE) VALUES(carMake, carModel, carYear, carColor, carStatus, carMileage, carPrice);
COMMIT;
END;
/

EXECUTE CARPRO('HONDA', 'ACCURA', 2006, 'BLACK', 'AVAILABLE', 100000, 24000.58);



CREATE OR REPLACE PROCEDURE EMPLOYEEPRO
(firstName IN VARCHAR2, lastName IN VARCHAR2, phoneNumber IN VARCHAR2, 
uemail IN VARCHAR2, userName IN VARCHAR2, upassWord IN VARCHAR2, userType IN VARCHAR2)
AS
uId Number;
BEGIN 
INSERT INTO USER_INFO (EMAIL, USER_NAME, PASS_WORD, USER_TYPE) VALUES(uemail, userName, upassWord, userType);
SELECT USER_INFO_ID INTO uId FROM USER_INFO
WHERE EMAIL = uemail and USER_NAME = userName; 
INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, PHONE_NUMBER, USER_INFO_ID) VALUES(firstName, lastName, phoneNumber, uId);
COMMIT;
END;
/

EXECUTE EMPLOYEEPRO('Maa', 'Knigten', '3479690463', 'matt@gmail.com', 'matt1234', '12345', 'Employee'); 


